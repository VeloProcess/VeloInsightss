#!/usr/bin/env node

/**
 * Script para configurar o Google SSO no VeloInsights
 * Executa: node setup-sso.js
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üîê Configura√ß√£o do Google SSO para VeloInsights\n');

// Verificar se j√° existe arquivo .env
const envPath = path.join(__dirname, '.env');
const envExists = fs.existsSync(envPath);

if (envExists) {
  console.log('‚ö†Ô∏è  Arquivo .env j√° existe!');
  rl.question('Deseja sobrescrever? (s/N): ', (answer) => {
    if (answer.toLowerCase() === 's' || answer.toLowerCase() === 'sim') {
      createEnvFile();
    } else {
      console.log('‚ùå Configura√ß√£o cancelada.');
      rl.close();
    }
  });
} else {
  createEnvFile();
}

function createEnvFile() {
  console.log('\nüìã Preencha as informa√ß√µes do Google Cloud Console:\n');
  
  rl.question('Client ID: ', (clientId) => {
    if (!clientId.trim()) {
      console.log('‚ùå Client ID √© obrigat√≥rio!');
      rl.close();
      return;
    }
    
    rl.question('Client Secret: ', (clientSecret) => {
      if (!clientSecret.trim()) {
        console.log('‚ùå Client Secret √© obrigat√≥rio!');
        rl.close();
        return;
      }
      
      rl.question('Dom√≠nio permitido (padr√£o: @velotax.com.br): ', (domain) => {
        const finalDomain = domain.trim() || '@velotax.com.br';
        
        rl.question('ID da planilha (padr√£o: 1F1VJrAzGage7YyX1tLCUCaIgB2GhvHSqJRVnmwwYhkA): ', (spreadsheetId) => {
          const finalSpreadsheetId = spreadsheetId.trim() || '1F1VJrAzGage7YyX1tLCUCaIgB2GhvHSqJRVnmwwYhkA';
          
          // Criar conte√∫do do .env
          const envContent = `# Configura√ß√µes do Google OAuth para VeloInsights
# Gerado automaticamente em ${new Date().toISOString()}

VITE_GOOGLE_CLIENT_ID=${clientId.trim()}
VITE_GOOGLE_CLIENT_SECRET=${clientSecret.trim()}
VITE_GOOGLE_DOMAIN=${finalDomain}
VITE_GOOGLE_SPREADSHEET_ID=${finalSpreadsheetId}
`;

          try {
            fs.writeFileSync(envPath, envContent);
            console.log('\n‚úÖ Arquivo .env criado com sucesso!');
            console.log('\nüìã Pr√≥ximos passos:');
            console.log('1. Reinicie o servidor de desenvolvimento');
            console.log('2. Acesse a aplica√ß√£o no navegador');
            console.log('3. Clique em "Conectar com Google"');
            console.log('4. Fa√ßa login com sua conta @velotax.com.br');
            console.log('\nüìñ Para mais informa√ß√µes, consulte GOOGLE_SSO_SETUP.md');
          } catch (error) {
            console.error('‚ùå Erro ao criar arquivo .env:', error.message);
          }
          
          rl.close();
        });
      });
    });
  });
}

// Instru√ß√µes iniciais
console.log('üìñ Instru√ß√µes:');
console.log('1. Acesse https://console.cloud.google.com/');
console.log('2. Crie um projeto ou selecione um existente');
console.log('3. Ative a Google Sheets API');
console.log('4. Crie credenciais OAuth 2.0');
console.log('5. Configure os URIs de redirecionamento:');
console.log('   - http://localhost:5173/callback.html');
console.log('   - https://veloinsights.vercel.app/callback.html');
console.log('6. Copie o Client ID e Client Secret\n');
